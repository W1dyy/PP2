s8776@DESKTOP-TFN4IUN MINGW64 ~
$ git config --global user.name "W1dyy"

s8776@DESKTOP-TFN4IUN MINGW64 ~
$ ^[[200~git config --global user.email "07ttbbttbb07@gmail.com"
bash: $'\E[200~git': command not found

s8776@DESKTOP-TFN4IUN MINGW64 ~
$ git config --global user.email "07ttbbttbb07@gmail.com"

s8776@DESKTOP-TFN4IUN MINGW64 ~
$ git config --global init.defaultBranch main

s8776@DESKTOP-TFN4IUN MINGW64 ~
$ mkdir work
cd work
touch hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work
$ git init
Initialized empty Git repository in C:/Users/s8776/work/.git/

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add hello.html
git commit -m "Initial Commit"
[main (root-commit) 9575184] Initial Commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git status
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ <h1>Hello, World!</h1>
bash: !: event not found

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git status
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.html

no changes added to commit (use "git add" and/or "git commit -a")

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Disable this message with "git config advice.addEmptyPathspec false"

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ ^[[200~git add hello.html
bash: $'\E[200~git': command not found

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   hello.html


s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add a.html
fatal: pathspec 'a.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add b.html
fatal: pathspec 'b.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git commit -m "Changes for a and b"
[main 12b6a25] Changes for a and b
 1 file changed, 1 insertion(+)

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add c.html
fatal: pathspec 'c.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git commit -m "Unrelated change to c"
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git commit
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add a.html
fatal: pathspec 'a.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git reset

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add a.html
fatal: pathspec 'a.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$  ^[[200~git add hello.html~
bash: ^[[200~git: command not found

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git add hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ git status
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ mkdir work

s8776@DESKTOP-TFN4IUN MINGW64 ~/work (main)
$ cd work

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ touch hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git init
Initialized empty Git repository in C:/Users/s8776/work/work/.git/

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit -m "Initial Commit"
[main (root-commit) 0ac5125] Initial Commit
 1 file changed, 1 insertion(+)
 create mode 100644 hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.html

no changes added to commit (use "git add" and/or "git commit -a")

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout
M       hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   hello.html


s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add a.html
fatal: pathspec 'a.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add b.html
fatal: pathspec 'b.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit -m "Changes for a and b"
[main 02e22c0] Changes for a and b
 1 file changed, 1 insertion(+), 1 deletion(-)

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add c.html
fatal: pathspec 'c.html' did not match any files

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit -m "Unrelated change to c"
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit VISUAL
error: pathspec 'VISUAL' did not match any file(s) known to git

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   hello.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.html


s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit -m "Added standard HTML page tags"
[main c656603] Added standard HTML page tags
 1 file changed, 5 insertions(+), 1 deletion(-)

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.html

no changes added to commit (use "git add" and/or "git commit -a")

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add .

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   hello.html


s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git commit -m "Added HTML header"
[main 751f2a4] Added HTML header
 1 file changed, 2 insertions(+)

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log
commit 751f2a41bd30512f621da12cc6deb24b7b4e01f1 (HEAD -> main)
Author: W1dyy <07ttbbttbb07@gmail.com>
Date:   Wed Jan 15 13:48:36 2025 +0500

    Added HTML header

commit c65660335f298194e42b0cbf2741c69b8f2ed82c
Author: W1dyy <07ttbbttbb07@gmail.com>
Date:   Wed Jan 15 13:47:50 2025 +0500

    Added standard HTML page tags

commit 02e22c0c5a818a26512d09421fd641547475c0b1
Author: W1dyy <07ttbbttbb07@gmail.com>
Date:   Wed Jan 15 13:44:04 2025 +0500

    Changes for a and b

commit 0ac5125025334ceddd79caf1fa8a980c841f4a81
Author: W1dyy <07ttbbttbb07@gmail.com>
Date:   Wed Jan 15 13:41:03 2025 +0500

    Initial Commit

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log --pretty=oneline
751f2a41bd30512f621da12cc6deb24b7b4e01f1 (HEAD -> main) Added HTML header
c65660335f298194e42b0cbf2741c69b8f2ed82c Added standard HTML page tags
02e22c0c5a818a26512d09421fd641547475c0b1 Changes for a and b
0ac5125025334ceddd79caf1fa8a980c841f4a81 Initial Commit

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ ^[[200~git log --oneline --max-count=2~
bash: $'\E[200~git': command not found

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log --oneline --max-count=2
751f2a4 (HEAD -> main) Added HTML header
c656603 Added standard HTML page tags

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log --oneline --since="5 minutes ago"
git log --oneline --until="5 minutes ago"
git log --oneline --author="Your Name"
git log --oneline --all
751f2a4 (HEAD -> main) Added HTML header
c656603 Added standard HTML page tags
02e22c0 Changes for a and b
0ac5125 Initial Commit
751f2a4 (HEAD -> main) Added HTML header
c656603 Added standard HTML page tags
02e22c0 Changes for a and b
0ac5125 Initial Commit

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log --all --pretty=format:"%h %cd %s (%an)" --since="7 days ago"
751f2a4 Wed Jan 15 13:48:36 2025 +0500 Added HTML header (W1dyy)
c656603 Wed Jan 15 13:47:50 2025 +0500 Added standard HTML page tags (W1dyy)
02e22c0 Wed Jan 15 13:44:04 2025 +0500 Changes for a and b (W1dyy)
0ac5125 Wed Jan 15 13:41:03 2025 +0500 Initial Commit (W1dyy)

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log --pretty=format:"%h %ad | %s%d [%an]" --date=short
751f2a4 2025-01-15 | Added HTML header (HEAD -> main) [W1dyy]
c656603 2025-01-15 | Added standard HTML page tags [W1dyy]
02e22c0 2025-01-15 | Changes for a and b [W1dyy]
0ac5125 2025-01-15 | Initial Commit [W1dyy]

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git config --global format.pretty '%h %ad | %s%d [%an]'

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git config --global log.date short

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git log
751f2a4 2025-01-15 | Added HTML header (HEAD -> main) [W1dyy]
c656603 2025-01-15 | Added standard HTML page tags [W1dyy]
02e22c0 2025-01-15 | Changes for a and b [W1dyy]
0ac5125 2025-01-15 | Initial Commit [W1dyy]

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout <hash>
cat hello.html
bash: syntax error near unexpected token `newline'
<html>
    <head>
    </head>
  <body>
    <h1>Hello, World!</h1>
  </body>
</html>

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout <hash>
cat hello.html
bash: syntax error near unexpected token `newline'
<html>
    <head>
    </head>
        <body>
            <h1>Hello, World!</h1>
    </body>
</html>

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout <hash>
cat hello.html
bash: syntax error near unexpected token `newline'
<html>
    <head>
    </head>
        <body>
            <h1>Hello, World!</h1>
    </body>
</html>
s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout <hash>
bash: syntax error near unexpected token `newline'

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ cat hello.html
<html>
    <head>
    </head>
        <body>
            <h1>Hello, World!</h1>
    </body>
</html>
s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git switch main
cat hello.html
M       hello.html
Already on 'main'
<html>
    <head>
    </head>
        <body>
            <h1>Hello, World!</h1>
    </body>
</html>
s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git tag v1
git log
751f2a4 2025-01-15 | Added HTML header (HEAD -> main, tag: v1) [W1dyy]
c656603 2025-01-15 | Added standard HTML page tags [W1dyy]
02e22c0 2025-01-15 | Changes for a and b [W1dyy]
0ac5125 2025-01-15 | Initial Commit [W1dyy]

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout v1^
cat hello.html
error: Your local changes to the following files would be overwritten by checkout:
        hello.html
Please commit your changes or stash them before you switch branches.
Aborting
<html>
    <head>
    </head>
        <body>
            <h1>Hello, World!</h1>
    </body>
</html>
s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git tag v1-beta
git log
751f2a4 2025-01-15 | Added HTML header (HEAD -> main, tag: v1-beta, tag: v1) [W1dyy]
c656603 2025-01-15 | Added standard HTML page tags [W1dyy]
02e22c0 2025-01-15 | Changes for a and b [W1dyy]
0ac5125 2025-01-15 | Initial Commit [W1dyy]

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout v1
git checkout v1-beta
M       hello.html
Note: switching to 'v1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 751f2a4 Added HTML header
M       hello.html
HEAD is now at 751f2a4 Added HTML header

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work ((v1))
$ git tag
v1
v1-beta

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work ((v1))
$ git log main --all
751f2a4 2025-01-15 | Added HTML header (HEAD, tag: v1-beta, tag: v1, main) [W1dyy]
c656603 2025-01-15 | Added standard HTML page tags [W1dyy]
02e22c0 2025-01-15 | Changes for a and b [W1dyy]
0ac5125 2025-01-15 | Initial Commit [W1dyy]

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work ((v1))
$ git switch main
M       hello.html
Switched to branch 'main'

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.html

no changes added to commit (use "git add" and/or "git commit -a")

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout hello.html
git status
cat hello.html
Updated 1 path from the index
On branch main
nothing to commit, working tree clean
<html>
    <head>
    </head>
  <body>
    <h1>Hello, World!</h1>
  </body>
</html>s

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git add hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   hello.html


s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git reset HEAD hello.html
Unstaged changes after reset:
M       hello.html

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$ git checkout hello.html
git status
Updated 1 path from the index
On branch main
nothing to commit, working tree clean

s8776@DESKTOP-TFN4IUN MINGW64 ~/work/work (main)
$
